#!/bin/sh

scanDir() {
    dir="."
    findPrintf="\"%f\"\n"
    if [ -n "$1" ] ; then
        dir="$1"
        findPrintf="\"$dir/%f\"\n"
    fi
    cd $dir
    dirname=${PWD##*/}
    # NOTE: The following command hasn't been tested with BSD find.
    files=$(find . -maxdepth 1 -regex '\./[^.].*\..*'  -type f  -printf $findPrintf  | paste -s -d ',')
    echo "{\"Type\":\"sample\",\"Name\":\"$dirname\",\"Files\":[$files],\"Dependencies\":[{\"name\":\"mydep\"}],\"Ops\":{\"graph\":null,\"depresolve\":null}}"
}

case $1 in
    scan)
        out="["$(scanDir .)
        # Only scan directories one level deep.
        for d in $(ls -D) ; do
            out=$out","$(scanDir $d)
        done
        out=$out"]"
        echo $out
        ;;
    graph)
        # Add the time to the graph output so we can differentiate
        # between cached and uncached builds.
        time=$(date +%s%N)
        echo "{\"Defs\":[{\"Repo\":\"\",\"UnitType\":\"sample\",\"Unit\":\".\",\"Path\":\"mydef\",\"Name\":\"mydef\",\"File\":\"f\",\"DefStart\":123,\"DefEnd\":456,\"Exported\":true,\"Kind\":\"var\",\"TreePath\":\"mydef\",\"Data\":{\"Date\":\"$time\"}}],\"Refs\":[],\"Docs\":[]}"
        ;;
    depresolve)
        echo '[{"Raw":{"name":"mydep"},"Target":{"ToRepoCloneURL":"https://github.com/example/repo"}}]'
        ;;
    *)
        echo Unknown command: $1 >&2
        exit 1
        ;;
esac
